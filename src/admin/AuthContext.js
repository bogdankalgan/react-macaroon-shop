import {createContext, useContext, useState, useEffect} from "react";
import {useNavigate, useLocation} from "react-router-dom";

const AuthContext = createContext();

export const AuthProvider = ({children}) => {
    const navigate = useNavigate();
    const location = useLocation();
    const [user, setUser] = useState(() => {
        return JSON.parse(localStorage.getItem("user")) || null;
    });

    useEffect(() => {
        if (user) {
            localStorage.setItem("user", JSON.stringify(user));
        }

        if (!user && location.pathname.startsWith("/admin")) {
            navigate("/login", {replace: true});
        }
    }, [location.pathname, user, navigate]);

    const login = async (userData) => {
        try {
            setUser(userData);
            localStorage.setItem("user", JSON.stringify(userData));

            // üî• –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞, —á—Ç–æ–±—ã –Ω–µ–ª—å–∑—è –±—ã–ª–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ `/login`
            navigate("/admin", {replace: true});
            window.history.replaceState(null, "", "/admin");
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:", error);
        }
    };

    const logout = () => {
        try {
            setUser(null);
            localStorage.removeItem("user");

            // üî• –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é, —á—Ç–æ–±—ã –Ω–µ–ª—å–∑—è –±—ã–ª–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ `/admin`
            navigate("/login", {replace: true});
            window.history.replaceState(null, "", "/login");


        } catch(error) {
            console.error("–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:", error);
        }
    };

    return (
        <AuthContext.Provider value={{user, login, logout}}>
            {children}
        </AuthContext.Provider>
    );
};

export const useAuth = () => useContext(AuthContext);

export {AuthContext};